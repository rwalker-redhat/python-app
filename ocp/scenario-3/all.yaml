---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-python-app
  namespace: scenario-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-python-app
  template:
    metadata:
      labels:
        app: my-python-app
    spec:
      containers:
      - name: my-python-app
        image: image-registry.openshift-image-registry.svc:5000/scenario-3/python-app:latest
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: python-app-svc
  labels:
    app: my-python-app
    namespace: scenario-3
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: web
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: my-python-app
  sessionAffinity: None
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: python-app-route
  namespace: scenario-3
spec:
  to:
    kind: Service
    name: python-app-svc
    weight: 100
  port:
    targetPort: 8000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  wildcardPolicy: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-grafana
  namespace: scenario-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-grafana
  template:
    metadata:
      labels:
        app: my-grafana
    spec:
      containers:
      - name: my-grafana
        image: image-registry.openshift-image-registry.svc:5000/scenario-3/grafana:latest
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
  namespace: scenario-3
  labels:
    app: my-grafana
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: web
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: my-grafana
  sessionAffinity: None
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: grafana-route
  namespace: scenario-3
spec:
  to:
    kind: Service
    name: grafana-svc
    weight: 100
  port:
    targetPort: 3000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  wildcardPolicy: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-prometheus
  namespace: scenario-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-prometheus
  template:
    metadata:
      labels:
        app: my-prometheus
    spec:
      volumes:
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus
      containers:
      - name: my-prometheus
        image: image-registry.openshift-image-registry.svc:5000/scenario-3/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-data
          mountPath: /var/lib/prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-svc
  labels:
    app: my-prometheus
    namespace: scenario-3
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: web
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: my-prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: prometheus-route
  namespace: scenario-3
spec:
  to:
    kind: Service
    name: prometheus-svc
    weight: 100
  port:
    targetPort: 9090
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  wildcardPolicy: None

